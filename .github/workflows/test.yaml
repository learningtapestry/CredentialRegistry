name: Test suite

on:
  push:
    branches:
      - testing
      - master
      - production
      - staging
  pull_request:
    branches:
      - master
      - production
      - staging
    types:
      - opened
      - synchronize

env:
  RAILS_ENV: test
  NODE_ENV: production
  POSTGRESQL_ADDRESS: 127.0.0.1
  POSTGRESQL_USERNAME: learningtapestry
  POSTGRESQL_PASSWORD: learningtapestry

jobs:
  test_suite:
    name: Test suite
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: learningtapestry
          POSTGRES_PASSWORD: learningtapestry
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3.5"

      - name: Install libcurl development package
        run: sudo apt-get update && sudo apt-get install -y libcurl4-openssl-dev
        
      - name: Install nvm and Node.js
        uses: actions/setup-node@v4

      - name: Cache Ruby gems
        if: always()
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Cache Yarn dependencies
        if: always()
        uses: actions/cache@v3
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: |
          gem update --system '3.3.5'
          gem install bundler
          bundle config set path 'vendor/bundle'
          bundle install 




      - name: Run overcommit checks
        run: |
          bin/overcommit --sign
          GIT_AUTHOR_EMAIL=ci@test.com GIT_AUTHOR_NAME='ci user' bin/overcommit --run


      - name: Check PostgreSQL is running
        run: |
          sudo apt-get update && sudo apt-get install -y postgresql-client
          until pg_isready -h localhost -p 5432 -U learningtapestry; do
            echo "Waiting for database to be ready..."
            sleep 5
          done
          echo "Database is ready!"

      - name: Start Redis
        uses: supercharge/redis-github-action@1.7.0
        with:
          redis-version: 7.0.5

      - name: Set up database
        run: |
          until pg_isready -h localhost -p 5432 -U learningtapestry; do
            echo "Waiting for database to be ready..."
            sleep 5
          done
          echo "Database is ready!"
          bin/bundle exec rake db:migrate
          bin/rails db:drop RAILS_ENV=test
          bin/rails db:create RAILS_ENV=test
          bin/rails db:schema:load RAILS_ENV=test
          bundle exec rake db:test:prepare RAILS_ENV=test
          
      - name: Run test suite
        run: |
          echo "Starting Minitest suite"
          bin/bundle exec rake test
          echo "Starting RSpec suite"
          bin/rspec --fail-fast
